from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

btnBack = KeyboardButton('‚èÆ–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
btnSamBack = KeyboardButton("‚èÆ–ù–∞–∑–∞–¥")

btnMainEge = KeyboardButton('üìö–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã')
btnMainSam = KeyboardButton('ü§ì –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ')
btnMainLanHelp = KeyboardButton('‚úÖ–ü–æ–º–æ—â—å —Å –≤—ã–±–æ—Ä–æ–º —è–∑—ã–∫–∞')
mainMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1).add(btnMainEge, btnMainSam, btnMainLanHelp)

btnMainTerms = KeyboardButton('üìö–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã')
btnHardTerms = KeyboardButton('üìö–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ä–º–∏–Ω—ã')
btnTypes = KeyboardButton('üìö–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö')
termsMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnMainTerms, btnHardTerms, btnTypes, btnBack)

btnSamCs = KeyboardButton('#Ô∏è‚É£C#')
btnSamPython = KeyboardButton('üêçPyth–æn')
btnSamPascal = KeyboardButton('üî§Pasc–∞l')
samMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnSamCs, btnSamPython, btnSamPascal, btnBack)

btnSamCs1 = KeyboardButton('–£—Å–ª–æ–≤–∏—è C#')
btnSamCs2 = KeyboardButton('–¶–∏–∫–ª—ã C#')
btnSamCs3 = KeyboardButton('–ú–∞—Å—Å–∏–≤—ã C#')
SamCsMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnSamCs1, btnSamCs2, btnSamCs3, btnSamBack)

btnSamPython1 = KeyboardButton('–£—Å–ª–æ–≤–∏—è üêç')
btnSamPython2 = KeyboardButton('–¶–∏–∫–ª—ã üêç')
btnSamPython3 = KeyboardButton('–ú–∞—Å—Å–∏–≤—ã üêç')
SamPythonMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnSamPython1, btnSamPython2, btnSamPython3, btnSamBack)

btnSamPascal1 = KeyboardButton('–¶–∏–∫–ª—ã üî§')
btnSamPascal2 = KeyboardButton('–£—Å–ª–æ–≤–∏—è üî§')
btnSamPascal3 = KeyboardButton('–ú–∞—Å—Å–∏–≤—ã üî§')
SamPascalMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnSamPascal1, btnSamPascal2, btnSamPascal3, btnSamBack)

lanHelpMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnBack)

btnIfElseCs = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä If Else C#")
btnSwitchCs = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä Switch C#")

btnWhileCs = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä while C#")
btnWhileDoCs = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä do while C#")
btnForCs = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä for C#")

btnMakeCs = KeyboardButton("–û–±—å—è–≤–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ C#")
btnInitCs = KeyboardButton("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ C#")
btnSortCs = KeyboardButton("–ü—Ä–∏–º–µ—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ C#")

UslCsMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnIfElseCs, btnSwitchCs, btnSamBack)
CycleCsMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnWhileCs, btnWhileDoCs, btnForCs, btnSamBack)
MasCsMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnMakeCs, btnInitCs, btnSortCs, btnSamBack)

btnIfPy = KeyboardButton("–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è if üêç")
btnIfElsePy = KeyboardButton("–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è if - else üêç")
btnIfElifPy = KeyboardButton("–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è if - elif - else üêç")

btnForPy = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä for üêç")
btnWhilePy = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä while üêç")
btnBreakConPy = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä—ã break –∏ continue üêç")

btnCreateMasPy = KeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ üêç")
btnPyMasMethods = KeyboardButton("–ú–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤ üêç")
btnPyObhodMas = KeyboardButton("–û–±—Ö–æ–¥ –º–∞—Å—Å–∏–≤–æ–≤ üêç")

UslPyMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnIfPy, btnIfElsePy, btnIfElifPy, btnSamBack)
CyclePyMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnForPy, btnWhilePy, btnBreakConPy, btnSamBack)
MasPyMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnCreateMasPy, btnPyMasMethods, btnPyObhodMas, btnSamBack)

btnForPas = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä for üî§")
btnWhilePas = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä while üî§")
btnRepPas = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä repeat üî§")

btnIfElsePas = KeyboardButton("–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è if-else üî§")
btnIfPas = KeyboardButton("–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ —Å if üî§")
btnOtherPas = KeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä—ã then, begin, end üî§")

btnWhyPas = KeyboardButton("–ó–∞—á–µ–º –Ω—É–∂–µ–Ω –º–∞—Å—Å–∏–≤? üî§")
btnMakeMasPas = KeyboardButton("–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –º–∞—Å—Å–∏–≤? üî§")
btnMasInitPas = KeyboardButton("–ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –≤ –º–∞—Å—Å–∏–≤ üî§")

CyclePasMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnForPas, btnWhilePas, btnRepPas, btnSamBack)
UslPasMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnIfElsePas, btnIfPas, btnOtherPas, btnSamBack)
MasPasMenu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnWhyPas, btnMakeMasPas, btnMasInitPas, btnSamBack)

btnYes = KeyboardButton("–î–∞")
btnSoso = KeyboardButton("–ù–µ–º–Ω–æ–≥–æ")
btnNo = KeyboardButton("–ù–µ—Ç")
q1 = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnYes, btnSoso, btnNo)

btnYes2 = KeyboardButton("–îa")
btnNo2 = KeyboardButton("–ùe—Ç")
btnTried = KeyboardButton("–ü—ã—Ç–∞–ª—Å—è")
q2 = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnYes2, btnTried, btnNo2)

btnHard = KeyboardButton("–°–ª–æ–∂–Ω—ã–π")
btnEasy = KeyboardButton("–ß—Ç–æ-—Ç–æ –º–µ–∂–¥—É")
btnMiddle = KeyboardButton("–ü—Ä–æ—Å—Ç–æ–π")
q3 = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(btnHard, btnMiddle, btnEasy)

btnWork = KeyboardButton("–î–ª—è —Ä–∞–±–æ—Ç—ã")
btnStudy = KeyboardButton("–î–ª—è —É—á—ë–±—ã")
btnProst = KeyboardButton("–õ–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å")
q4 = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnWork, btnStudy, btnProst)

btnHigh = KeyboardButton("–í—ã—Å—à–µ–µ")
btnMid = KeyboardButton("–°—Ä–µ–¥–Ω–µ–µ")
btnOther = KeyboardButton("–î—Ä—É–≥–æ–µ")
q5 = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3).add(btnHigh, btnMid, btnOther)
